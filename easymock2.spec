Name:           easymock2
Version:        2.5.2
Release:        6
Summary:        Easy mock objects
License:        ASL 2.0
Group:          Development/Java
URL:            http://easymock.org/
# generated by sh fetch-easymock.sh
Source0:        easymock-%{version}.tgz
# extracted from http://download.eclipse.org/tools/orbit/downloads/drops/R20090529135407/bundles/org.easymock_2.4.0.v20090202-0900.jar#META-INF/MANIFEST.MF
Source1:        easymock-MANIFEST.MF
# generated by mvn ant:ant
Source2:        build.xml.tar.gz
Source3:        fetch-easymock.sh
Patch0:		easymock2-nameClash.patch

BuildRequires:  jpackage-utils >= 0:1.7.2
BuildRequires:  ant >= 0:1.6
BuildRequires:  junit >= 3.8.1
BuildRequires:  java-javadoc
BuildRequires:  zip
Requires:       java
BuildArch:      noarch
Requires:       jpackage-utils >= 0:1.7.2

%description
EasyMock provides Mock Objects for interfaces in JUnit tests by generating
them on the fly using Java's proxy mechanism. Due to EasyMock's unique style
of recording expectations, most refactorings will not affect the Mock Objects.
So EasyMock is a perfect fit for Test-Driven Development.

%package javadoc
Summary:    Javadoc for %{name}
Group:      Development/Java

%description javadoc
Javadoc for %{name}.

%prep
%setup -q -n easymock
%patch0 -p2
mkdir -p .m2/repository/JPP/maven2/default_poms
tar xzf %{SOURCE2}

# remove all binary libs
find . -name "*.jar" -exec rm -f {} \;

%build
ant -Dmaven.mode.offline=true -Dmaven.repo.local=.m2 -Dmaven.test.skip=true package javadoc
mv target/easymock-2.5.jar target/%{name}-%{version}.jar

# inject OSGi manifests
mkdir -p META-INF
cp -p %{SOURCE1} META-INF/MANIFEST.MF
touch META-INF/MANIFEST.MF
zip -u target/%{name}-%{version}.jar META-INF/MANIFEST.MF

%install

# jars
install -d -m 755 %{buildroot}%{_javadir}
%add_to_maven_depmap org.easymock easymock %{version} JPP %{name}

install -m 644 target/%{name}-%{version}.jar \
    %{buildroot}%{_javadir}/%{name}.jar

# pom
install -d -m 755 %{buildroot}%{_datadir}/maven2/poms
install -pm 644 pom.xml \
    %{buildroot}%{_datadir}/maven2/poms/JPP-%{name}.pom

# javadoc
install -d -m 755 %{buildroot}%{_javadocdir}/%{name}-%{version}
cp -pr target/site/apidocs/* %{buildroot}%{_javadocdir}/%{name}-%{version}
ln -s %{name}-%{version} %{buildroot}%{_javadocdir}/%{name}
rm -rf target/site/apidocs

%post
%update_maven_depmap

%postun
%update_maven_depmap

%files
%doc LICENSE.txt
%{_javadir}/*
%{_datadir}/maven2/poms/*
%{_mavendepmapfragdir}

%files javadoc
%doc %{_javadocdir}/*

